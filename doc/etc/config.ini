; Dht node configuration
;
; A dht node is a server that communicates via a binary protocol and stores
; data in a key/value storage. Data can be stored into different channels
; that are automatically created when a first insert command is sent to a
; specific channel. A dht node can store the data in different storage
; engines, currently memory or logfiles.


; Basic server configuration
;
; address               ip address on which the server should be listening
; port                  port on which the server should be listening
; pidfile               name of the PID file
; data_dir              directory where the data is stored
; storage_engine        storage engine that should be used for this node server:
;                       [memory, logfiles]
; size_limit            size limit for storage engine (should to be adequate for
;                       the choosen storage engine). If set to 0 no limit is 
;                       applied. size limit is set in bytes. Ignored by logiles.
; minval                Minimum hash value (key) handled by this node, specified
;                       as a hexadecimal integer (prepended with 0x). The hash
;                       value is padded out with additional 0s to the right if
;                       it is < 8 digits long.
; maxval                Maximum hash value (key) handled by this node, specified
;                       as a hexadecimal integer (prepended with 0x). The hash
;                       value is padded out with additional Fs to the right if
;                       it is < 8 digits long.

[Server]

address                 = 192.168.2.222
port                    = 10011
pidfile                 = var/server.pid
data_dir                = data
storage_engine          = memory
size_limit              = 3000000000
minval                  = 0x0
maxval                  = 0xf


; Memory storage engine configuration
;
; bnum                  specifies the number of elements of the bucket array.
;                       If it is not more than 0, the default value is used.
;                       The default value is 32749. Suggested size of the bucket
;                       array is about from 1 to 4 times of the number of all
;                       pages to be stored.

[Options_Memory]

bnum                    = 32749


; LogFiles storage engine configuration
;
; write_buffer_size     specifies the file output buffer size in bytes; default
;                       is 65536.

[Options_LogFiles]

write_buffer_size       = 65536


; Service threads configuration
;
; maintenance_period   specifies the number of seconds between each maintenance
;                      call (in the memory storage engine the maintenance call
;                      dumps the memory channels to disk)

[ServiceThreads]

maintenance_period      = 900


; Logging Configuration
;
; error                  log for exceptions thrown in the server
; trace                  trace log file for debugging purpose
; stats                  stats log file for I/O info
; stats_log_enabled      dis/enables output to stats log
; stats_log_period       update time for stats log (seconds)
; console_stats_enabled  dis/enables console stats line
; console_echo_trace     toggles echoing of trace messages to the console
; console_echo_error     toggles echoing of error messages to the console

[Log]

error                   = log/error.log
trace                   = log/trace.log
stats                   = log/stats.log
stats_log_enabled       = true
stats_log_period        = 10
console_stats_enabled   = true
console_echo_error      = true
console_echo_trace      = false
