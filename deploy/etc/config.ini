; Queue node configuration
;
; A queue node is a server that communicates via a binary protocol and stores
; data in a ring buffer in memory. Data can be stored into different channels
; that are automatically created when a first insert command is send to a
; specific channel.
;
; (c) 2009-2010 sociomantic labs GmbH. All rights reserved
;               david.eckardt@sociomantic.com
;               thomas.nicolai@sociomantic.com
;		lars.kirchhoff@sociomantic.com


; Basic server configuration
;
; address               ip address on which the server should be listening
; port                  port on which the server should be listening
; data_dir              directory where the data is stored
; size_limit            size limit for node. If set to 0 no limit is applied.
;                       size limit is set in bytes.
; channel_size_limit    size limit for each channel. When a request is performed
;                       on a new channel, this many bytes are allocated.

[Server]

address                 = 127.0.0.1
port                    = 44444
data_dir                = data
size_limit              = 0
channel_size_limit      = 10000000


; Node performance configuration
;
; write_flush_ms        millisecond interval at which to flush the buffers of
;                       any stream requests

[Performance]

write_flush_ms          = 250


; Stats logging Configuration
; logfile                 location of logfile to write cacti stats into
; console_stats_enabled   determines whether the queue node will output status
;                         information to the console while running

[Stats]

logfile                 = log/stats.log
console_stats_enabled   = true


; Logger configuration
;
; level       deepest logger level to output (error, warn, info, trace)
; propagate   whether to propagate these settings to child loggers
; console     whether to output logging info to the console
; file        path of file to write logging info to

[LOG.Root]

level = trace
propagate = true
console = false
file = log/root.log

